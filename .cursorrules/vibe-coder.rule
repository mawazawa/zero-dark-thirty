// .cursorrules/vibe-coder.rule
// ██╗   ██╗  ██╗  ██████╗   ███████╗      ██████╗   ██████╗   ██████╗   ███████╗  ██████╗        ██╗          ██████╗   ███████╗  ██╗   ██╗
// ██║   ██║  ██║  ██╔══██╗  ██╔════╝     ██╔════╝  ██╔═══██╗  ██╔══██╗  ██╔════╝  ██╔══██╗       ██║         ██╔══██╗  ██╔════╝  ██║   ██║
// ██║   ██║  ██║  ██████╔╝  █████╗       ██║       ██║   ██║  ██║  ██║  █████╗    ██████╔╝       ██║         ██║  ██║  █████╗    ██║   ██║
// ╚██╗ ██╔╝  ██║  ██╔══██╗  ██╔══╝       ██║       ██║   ██║  ██║  ██║  ██╔══╝    ██╔══██╗       ██║         ██║  ██║  ██╔══╝    ╚██╗ ██╔╝
//  ╚████╔╝   ██║  ██████╔╝  ███████╗     ╚██████╗  ╚██████╔╝  ██████╔╝  ███████╗  ██║  ██║       ███████╗    ██████╔╝  ███████╗   ╚████╔╝
//   ╚═══╝    ╚═╝  ╚═════╝   ╚══════╝      ╚═════╝   ╚═════╝   ╚═════╝   ╚══════╝  ╚═╝  ╚═╝       ╚══════╝    ╚═════╝   ╚══════╝    ╚═══╝

// VIBE CODER RULES: HUMAN FLOW STATE OVER EVERYTHING

// Deployment Philosophy:
// - v0.dev → Vercel (DIRECT TO PRODUCTION)
// - GitHub only when absolutely necessary
// - Ship fast, optimize later
// - Flow state preservation is PRIORITY ONE
// - Dev, Don't Kill My Vibe - EVER!

// ██████╗    ███████╗  ██╗   ██╗  ██╗          ██████╗    ██████╗   ███╗   ██╗  ████████╗    ██╗  ██╗  ██╗  ██╗      ██╗          ███╗   ███╗  ██╗   ██╗
// ██╔══██╗   ██╔════╝  ██║   ██║  ██║         ██╔═══██╗  ██╔═══██╗  ████╗  ██║  ╚══██╔══╝    ██║ ██╔╝  ██║  ██║      ██║          ████╗ ████║  ╚██╗ ██╔╝
// ██║  ██║   █████╗    ██║   ██║  ██║         ██║   ██║  ██║   ██║  ██╔██╗ ██║     ██║       █████╔╝   ██║  ██║      ██║          ██╔████╔██║   ╚████╔╝
// ██║  ██║   ██╔══╝    ╚██╗ ██╔╝  ██║         ██║   ██║  ██║   ██║  ██║╚██╗██║     ██║       ██╔═██╗   ██║  ██║      ██║          ██║╚██╔╝██║    ╚██╔╝
// ██████╔╝   ███████╗   ╚████╔╝   ███████╗    ╚██████╔╝  ╚██████╔╝  ██║ ╚████║     ██║       ██║  ██╗  ██║  ███████╗  ███████╗     ██║ ╚═╝ ██║     ██║
// ╚═════╝    ╚══════╝    ╚═══╝    ╚══════╝     ╚═════╝    ╚═════╝   ╚═╝  ╚═══╝     ╚═╝       ╚═╝  ╚═╝  ╚═╝  ╚══════╝  ╚══════╝     ╚═╝     ╚═╝     ╚═╝

// Docker Environment:
// - Container-first development environment
// - Use Docker for ALL development work
// - Docker Compose for multi-container environments
// - Dockerize all projects for consistency
// - ALWAYS check if Docker Desktop is running (use docker_check.sh)
// - Use Docker volume mounts for live code updates
// - Dev, Don't Kill My Vibe by asking me to start Docker manually

// ██╗   ██╗  ██╗  ██████╗    ███████╗      ██████╗    ██████╗   ██████╗   ███████╗     ██████╗   ██████╗   ██╗      ██████╗   ██████╗   ███████╗
// ██║   ██║  ██║  ██╔══██╗   ██╔════╝     ██╔════╝   ██╔═══██╗  ██╔══██╗  ██╔════╝    ██╔════╝  ██╔═══██╗  ██║     ██╔═══██╗  ██╔══██╗  ██╔════╝
// ██║   ██║  ██║  ██████╔╝   █████╗       ██║        ██║   ██║  ██║  ██║  █████╗      ██║       ██║   ██║  ██║     ██║   ██║  ██████╔╝  ███████╗
// ╚██╗ ██╔╝  ██║  ██╔══██╗   ██╔══╝       ██║        ██║   ██║  ██║  ██║  ██╔══╝      ██║       ██║   ██║  ██║     ██║   ██║  ██╔══██╗  ╚════██║
//  ╚████╔╝   ██║  ██████╔╝   ███████╗     ╚██████╗   ╚██████╔╝  ██████╔╝  ███████╗    ╚██████╗  ╚██████╔╝  ███████╗╚██████╔╝  ██║  ██║  ███████║
//   ╚═══╝    ╚═╝  ╚═════╝    ╚══════╝      ╚═════╝    ╚═════╝   ╚═════╝   ╚══════╝     ╚═════╝   ╚═════╝   ╚══════╝ ╚═════╝   ╚═╝  ╚═╝  ╚══════╝

// Code Style:
// 1. Use TypeScript for EVERYTHING - zero exceptions
// 2. Tailwind over CSS - always
// 3. Functional components only
// 4. No Redux - use React Context or hooks
// 5. Mobile-first, responsive design
// 6. Dark mode by default
// 7. Dev, Don't Kill My Vibe with legacy code patterns

// ████████╗  ███████╗  ███████╗  ████████╗  ██╗  ███╗   ██╗   ██████╗       ██████╗   ██████╗   ████████╗  ██╗  ███╗   ███╗  ██╗  ███████╗   █████╗   ████████╗  ██╗   ██████╗   ███╗   ██╗
// ╚══██╔══╝  ██╔════╝  ██╔════╝  ╚══██╔══╝  ██║  ████╗  ██║  ██╔════╝      ██╔═══██╗  ██╔══██╗  ╚══██╔══╝  ██║  ████╗ ████║  ██║  ╚══███╔╝  ██╔══██╗  ╚══██╔══╝  ██║  ██╔═══██╗  ████╗  ██║
//    ██║     █████╗    ███████╗     ██║     ██║  ██╔██╗ ██║  ██║  ███╗     ██║   ██║  ██████╔╝     ██║     ██║  ██╔████╔██║  ██║    ███╔╝   ███████║     ██║     ██║  ██║   ██║  ██╔██╗ ██║
//    ██║     ██╔══╝    ╚════██║     ██║     ██║  ██║╚██╗██║  ██║   ██║     ██║   ██║  ██╔═══╝      ██║     ██║  ██║╚██╔╝██║  ██║   ███╔╝    ██╔══██║     ██║     ██║  ██║   ██║  ██║╚██╗██║
//    ██║     ███████╗  ███████║     ██║     ██║  ██║ ╚████║  ╚██████╔╝     ╚██████╔╝  ██║          ██║     ██║  ██║ ╚═╝ ██║  ██║  ███████╗  ██║  ██║     ██║     ██║  ╚██████╔╝  ██║ ╚████║
//    ╚═╝     ╚══════╝  ╚══════╝     ╚═╝     ╚═╝  ╚═╝  ╚═══╝   ╚═════╝       ╚═════╝   ╚═╝          ╚═╝     ╚═╝  ╚═╝     ╚═╝  ╚═╝  ╚══════╝  ╚═╝  ╚═╝     ╚═╝     ╚═╝   ╚═════╝   ╚═╝  ╚═══╝

// Testing/Optimization:
// 1. Lighthouse score minimum: 90+
// 2. Always lazy-load images and heavy components
// 3. Always use Next.js Image component
// 4. Use Suspense and dynamic imports for code splitting
// 5. Test on mobile FIRST, desktop second
// 6. Add performance monitoring and analytics

// ██╗   ██╗  ██╗      ██╗   ██╗  ██╗  ███████╗  ██╗   ██╗   █████╗   ██╗       ██╗  ██╗  ██╗  ███████╗  ██████╗    █████╗   ██████╗    ██████╗  ██╗  ██╗  ██╗   ██╗
// ██║   ██║  ██║      ██║   ██║  ██║  ██╔════╝  ██║   ██║  ██╔══██╗  ██║       ██║  ██║  ██║  ██╔════╝  ██╔══██╗  ██╔══██╗  ██╔══██╗  ██╔════╝  ██║  ╚██╗ ██╔╝
// ██║   ██║  ██║      ██║   ██║  ██║  ███████╗  ██║   ██║  ███████║  ██║       ██║  ██║  ██║  █████╗    ██████╔╝  ███████║  ██████╔╝  ██║       ██║   ╚████╔╝
// ╚██╗ ██╔╝  ██║      ██║   ██║  ██║  ╚════██║  ██║   ██║  ██╔══██║  ██║       ██║  ██║  ██║  ██╔══╝    ██╔══██╗  ██╔══██║  ██╔══██╗  ██║       ██║    ╚██╔╝
//  ╚████╔╝   ███████╗  ╚██████╔╝  ██║  ███████║  ╚██████╔╝  ██║  ██║  ███████╗  ██║  ██████╔╝  ███████╗  ██║  ██║  ██║  ██║  ██║  ██║  ╚██████╗  ██║     ██║
//   ╚═══╝    ╚══════╝   ╚═════╝   ╚═╝  ╚══════╝   ╚═════╝   ╚═╝  ╚═╝  ╚══════╝  ╚═╝  ╚═════╝   ╚══════╝  ╚═╝  ╚═╝  ╚═╝  ╚═╝  ╚═╝  ╚═╝   ╚═════╝  ╚═╝     ╚═╝

// UI Standards - Dev, Don't Kill My Vibe with boring UIs:
// 1. Aceternity UI components preferred - maximum visual impact
// 2. Radix UI as fallback - solid primitives
// 3. Avoid Material UI - too corporate and boring
// 4. Subtle animations for micro-interactions - delight users
// 5. Dark mode as default, light mode as option
// 6. ShadCN typography system - consistent text hierarchy
// 7. Consistent color system with neon coral orange accent (#FF6E4A - adderall color)