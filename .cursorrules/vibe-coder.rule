// .cursorrules/vibe-coder.rule
// ██╗   ██╗██╗██████╗ ███████╗     ██████╗ ██████╗ ██████╗ ███████╗██████╗
// ██║   ██║██║██╔══██╗██╔════╝    ██╔════╝██╔═══██╗██╔══██╗██╔════╝██╔══██╗
// ██║   ██║██║██████╔╝█████╗      ██║     ██║   ██║██║  ██║█████╗  ██████╔╝
// ╚██╗ ██╔╝██║██╔══██╗██╔══╝      ██║     ██║   ██║██║  ██║██╔══╝  ██╔══██╗
//  ╚████╔╝ ██║██████╔╝███████╗    ╚██████╗╚██████╔╝██████╔╝███████╗██║  ██║
//   ╚═══╝  ╚═╝╚═════╝ ╚══════╝     ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝╚═╝  ╚═╝

// VIBE CODER RULES: MAXIMUM EFFICIENCY, ZERO BULLSHIT

// Deployment Philosophy:
// - v0.dev → Vercel (DIRECT TO PRODUCTION)
// - GitHub only when absolutely necessary
// - Ship fast, optimize later

// ██████╗ ███████╗███████╗████████╗    ██████╗ ██████╗  █████╗  ██████╗████████╗██╗ ██████╗███████╗███████╗
// ██╔══██╗██╔════╝██╔════╝╚══██╔══╝    ██╔══██╗██╔══██╗██╔══██╗██╔════╝╚══██╔══╝██║██╔════╝██╔════╝██╔════╝
// ██████╔╝█████╗  ███████╗   ██║       ██████╔╝██████╔╝███████║██║        ██║   ██║██║     █████╗  ███████╗
// ██╔══██╗██╔══╝  ╚════██║   ██║       ██╔═══╝ ██╔══██╗██╔══██║██║        ██║   ██║██║     ██╔══╝  ╚════██║
// ██████╔╝███████╗███████║   ██║       ██║     ██║  ██║██║  ██║╚██████╗   ██║   ██║╚██████╗███████╗███████║
// ╚═════╝ ╚══════╝╚══════╝   ╚═╝       ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝   ╚═╝   ╚═╝ ╚═════╝╚══════╝╚══════╝

// Code Style:
// 1. Use TypeScript for EVERYTHING - zero exceptions
// 2. Tailwind over CSS - always
// 3. Functional components only
// 4. No Redux - use React Context or hooks
// 5. Mobile-first, responsive design
// 6. Dark mode by default

// ████████╗███████╗███████╗████████╗██╗███╗   ██╗ ██████╗      ██████╗ ██████╗ ████████╗██╗███╗   ███╗██╗███████╗ █████╗ ████████╗██╗ ██████╗ ███╗   ██╗
// ╚══██╔══╝██╔════╝██╔════╝╚══██╔══╝██║████╗  ██║██╔════╝     ██╔═══██╗██╔══██╗╚══██╔══╝██║████╗ ████║██║╚══███╔╝██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║
//    ██║   █████╗  ███████╗   ██║   ██║██╔██╗ ██║██║  ███╗    ██║   ██║██████╔╝   ██║   ██║██╔████╔██║██║  ███╔╝ ███████║   ██║   ██║██║   ██║██╔██╗ ██║
//    ██║   ██╔══╝  ╚════██║   ██║   ██║██║╚██╗██║██║   ██║    ██║   ██║██╔═══╝    ██║   ██║██║╚██╔╝██║██║ ███╔╝  ██╔══██║   ██║   ██║██║   ██║██║╚██╗██║
//    ██║   ███████╗███████║   ██║   ██║██║ ╚████║╚██████╔╝    ╚██████╔╝██║        ██║   ██║██║ ╚═╝ ██║██║███████╗██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║
//    ╚═╝   ╚══════╝╚══════╝   ╚═╝   ╚═╝╚═╝  ╚═══╝ ╚═════╝      ╚═════╝ ╚═╝        ╚═╝   ╚═╝╚═╝     ╚═╝╚═╝╚══════╝╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝

// Testing/Optimization:
// 1. Lighthouse score minimum: 90+
// 2. Always lazy-load images and heavy components
// 3. Always use Next.js Image component
// 4. Use Suspense and dynamic imports for code splitting
// 5. Test on mobile FIRST, desktop second

// ██╗   ██╗██╗    ██╗██╗   ██╗██╗  ██╗    ███████╗██╗███████╗███████╗████████╗
// ██║   ██║╚██╗  ██╔╝██║   ██║╚██╗██╔╝    ██╔════╝██║██╔════╝██╔════╝╚══██╔══╝
// ██║   ██║ ╚████╔╝ ██║   ██║ ╚███╔╝     █████╗  ██║█████╗  █████╗     ██║
// ██║   ██║  ╚██╔╝  ██║   ██║ ██╔██╗     ██╔══╝  ██║██╔══╝  ██╔══╝     ██║
// ╚██████╔╝   ██║   ╚██████╔╝██╔╝ ██╗    ██║     ██║██║     ███████╗   ██║
//  ╚═════╝    ╚═╝    ╚═════╝ ╚═╝  ╚═╝    ╚═╝     ╚═╝╚═╝     ╚══════╝   ╚═╝

// UI Standards:
// 1. Aceternity UI components preferred
// 2. Radix UI as fallback
// 3. Avoid Material UI - too corporate
// 4. Subtle animations for micro-interactions
// 5. Dark mode as default, light mode as option